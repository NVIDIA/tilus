#!/bin/bash

# Exit script on first error
set -e

# Define color codes with bold formatting
BOLD_GREEN='\033[1;32m'
BOLD_RED='\033[1;31m'
NC='\033[0m' # No color/reset

# Get the directory of the script
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Define the target directory (relative to script location)
TARGET_DIR=$(realpath "$SCRIPT_DIR/../../python")

# Ensure the target directory exists
if [ ! -d "$TARGET_DIR" ]; then
    echo -e "${BOLD_RED}Error: Target directory '$TARGET_DIR' does not exist.${NC}"
    exit 1
fi

# Get all tracked Python files
STAGED_FILES=$(git ls-files "$TARGET_DIR" | grep '\.py$' || true)

# Exit if no Python files exist in the repo
if [ -z "$STAGED_FILES" ]; then
    echo -e "${BOLD_GREEN}No Python files found in the repository. Skipping checks.${NC}"
    exit 0
fi

echo "Checking all Python files before push:"
# echo "$STAGED_FILES" | sed 's/^/\t/'

# Run Ruff for linting (blocking)
echo "Running ruff linting..."
if ! echo "$STAGED_FILES" | xargs ruff check; then
    echo -e "${BOLD_RED}Error: ruff found linting issues. Push rejected.${NC}"
    exit 1
fi

# Run Mypy for type checking (blocking)
echo "Running mypy type checking..."
if ! echo "$STAGED_FILES" | xargs mypy; then
    echo -e "${BOLD_RED}Error: mypy found type checking issues. Push rejected.${NC}"
    exit 1
fi

echo -e "${BOLD_GREEN}All checks passed. Push allowed.${NC}"
exit 0
